{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACT,OAAIN,EACKI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAE3BA,E,IAZQQ,SAASC,cAAc,SA0C/BC,iBAAiB,UA1BxB,SAA0BC,GACxBA,EAAEC,iBAEF,IAAMC,EAAaF,EAAXE,QASV,SAAuBb,EAAOc,EAAMC,GAClC,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAAG,CAGlClB,EAAckB,EAAI,EAFIC,OAAOjB,GAASgB,EAAIF,GAGvCI,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUqB,EAAKD,EAALnB,MACjBJ,EAAAyB,OAAOC,QAAQ,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANH,EAAM,M,IAE9DI,OAAM,SAAAL,G,IAAGpB,EAAQoB,EAARpB,SAAUqB,EAAKD,EAALnB,MAClBJ,EAAAyB,OAAOI,QAAQ,sBAAqCF,OAAfxB,EAAS,QAAYwB,OAANH,EAAM,M,KAZhEM,CAJcb,EAAOb,MAAM2B,MACdd,EAAOC,KAAKa,MACVd,EAAOE,OAAOY,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        return resolve({ position, delay });\n      } else {\n        return reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction handleFormSubmit(e) {\n  e.preventDefault();\n\n  const { target } = e;\n\n  const delay = target.delay.value;\n  const step = target.step.value;\n  const amount = target.amount.value;\n\n  resultPromise(delay, step, amount);\n}\n\nfunction resultPromise(delay, step, amount) {\n  for (let i = 0; i < amount; i += 1) {\n    const delayWithStep = Number(delay) + i * step;\n\n    createPromise(i + 1, delayWithStep)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nformEl.addEventListener('submit', handleFormSubmit);\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","e","preventDefault","target","step","amount","i","Number","then","param","_$delay","Notify","success","concat","catch","failure","$ce04d3a99e08e73b$var$resultPromise","value"],"version":3,"file":"03-promises.c3c1235d.js.map"}